using DataLayer;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.Security;
using System.Text;

public partial class ForcedPassword : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!HttpContext.Current.User.Identity.IsAuthenticated)
        {
            Response.Redirect("~/Login.aspx");
        }
        txtSession.Text = this.Request.QueryString["UserName"];
    }

    protected void CallbackChangePass_Callback(object source, DevExpress.Web.CallbackEventArgs e)
    {
        CallbackChangePass.JSProperties["cp_Inser"] = " ";
        var userName = txtSession.Text;

        // Update the password.

        MembershipUser u = Membership.GetUser(userName);

        try
        {
            if (u.ChangePassword(u.GetPassword(), PasswordTextbox.Text))
            {
                CareDataContext Layer = new CareDataContext();
                Layer.UpdateTroubleLogging(userName);

                Msg.Text = "Password changed.";


                //if (Context.User.Identity.IsAuthenticated)
                //{
                //    try
                //    {
                //        Response.Redirect("~/");
                //    }
                //    catch (Exception)
                //    { }
                //}

                CallbackChangePass.JSProperties["cp_Inser"] = "add";

            }

            else
            {
                Msg.Text = "Password change failed. Please re-enter your values and try again.";
                CallbackChangePass.JSProperties["cp_Inser"] = "Error";
            }
        }
        catch (Exception ex)
        {
            Msg.Text = "An exception occurred: " + Server.HtmlEncode(ex.Message) + ". Please re-enter your values and try again.";
            CallbackChangePass.JSProperties["cp_add"] = "add";
        }
    }
   

    protected void CallbackDate_Callback(object source, DevExpress.Web.CallbackEventArgs e)
    {
        e.Result = " ";

        var typ = txtSession.Text;

        if (typ.Contains("@"))
        {
            CareDataContext Layer = new CareDataContext();

            var req = (from p in Layer.aspnet_Membership where p.Email.ToString() == typ.ToString() select p).ToList();

            if (req.Count() == 0)
            {
                e.Result = "Enter a valid e-mail address.";
            }
        }
        else
        {
            MembershipUser usrInfo = Membership.GetUser(typ);

            if (usrInfo == null)
            {
                e.Result = "Enter a valid UserName.";
            }

        }


    }


    protected void CallbackDateOLD_Callback(object source, DevExpress.Web.CallbackEventArgs e)
    {
        if (Membership.ValidateUser(txtSession.Text, txtOldPassword.Text) == true)
        {
            e.Result = "Good";
        }
        else
        {
            e.Result = "false";
           
        }
    }
    
    protected void CallbackMin_Callback(object source, DevExpress.Web.CallbackEventArgs e)
    {
        var sess = this.Request.QueryString["UserName"];
        var pass = PasswordTextbox.Text;




        if (Membership.ValidateUser(txtSession.Text, pass) == true)
        {
            e.Result = "Error";
        }
        else
        {
            e.Result = "Good";

        }








        var passwordManager = new NetFourMembershipProvider();
        var clearPWd = passwordManager.GetClearTextPassword(pass);
     //   MembershipPasswordFormat.get
        CareDataContext Layer = new CareDataContext();




        //var req = (from p in Layer.Get_ComparetPassword(sess, clearPWd)
        //           select p).ToList();


        //var user = Membership.GetUser(sess);
        //user.GetPassword();


        //if (req.Count() > 0)
        //{

        //     var Nbr = req[0].NBR;


        //    if ( Convert.ToInt32(Nbr) > 15)
        //    {

        //        e.Result = "accept Password";

        //    }
        //    else
        //    {
        //        e.Result = "<15";

        //    }


            
        //}
        //else
        //{

        //    e.Result = "accept Password";

        //}



        //else
        //{
        //   // MembershipUser usrInfo = Membership.GetUser(typ);

        //    if (usrInfo == null)
        //    {
        //        e.Result = "Enter a valid UserName.";
        //    }

        //}





    }



    protected void btnValidation_Click(object sender, EventArgs e)
    {
        if (Context.User.Identity.IsAuthenticated)
        {
            try
            {
                Response.Redirect("~/");
            }
            catch (Exception)
            { }
        }
    }
}

public class NetFourMembershipProvider : SqlMembershipProvider
    {
        public string GetClearTextPassword(string encryptedPwd)
        {
        //byte[] encodedPassword = Convert.FromBase64String(encryptedPwd);
        //byte[] bytes = this.EncryptPassword(encodedPassword);
        //if (bytes == null)
        //{
        //    return null;
        //}
        //return Encoding.Unicode.GetString(bytes, 0x10, bytes.Length - 0x10);
        return Convert.ToBase64String(EncryptPassword(Encoding.Unicode.GetBytes(encryptedPwd)));
    }
    }
